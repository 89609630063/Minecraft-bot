const fs = require('fs');
const path = require('path');

const outputDir = path.join(__dirname, "data"); // –õ–æ–∫–∞–ª—å–Ω–∞—è –ø–∞–ø–∫–∞
const outputPath = path.join(outputDir, "recipes_converted.json");

// ‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–∞–ø–∫–∞ "data", –µ—Å–ª–∏ –Ω–µ—Ç ‚Äî —Å–æ–∑–¥–∞—ë–º –µ—ë
if (!fs.existsSync(outputDir)) {
    fs.mkdirSync(outputDir, { recursive: true });
}

// üîÑ –î–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è (–∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–∏)
const formattedRecipes = {
    updated: new Date().toISOString(),
    recipes: [
        { name: "–ö–∞–º–µ–Ω–Ω—ã–π –º–µ—á", ingredients: ["–ø–∞–ª–∫–∞", "–±—É–ª—ã–∂–Ω–∏–∫", "–±—É–ª—ã–∂–Ω–∏–∫"] },
        { name: "–ñ–µ–ª–µ–∑–Ω—ã–π –º–µ—á", ingredients: ["–ø–∞–ª–∫–∞", "–∂–µ–ª–µ–∑–Ω—ã–π —Å–ª–∏—Ç–æ–∫", "–∂–µ–ª–µ–∑–Ω—ã–π —Å–ª–∏—Ç–æ–∫"] }
    ]
};

// ‚úÖ –ó–∞–ø–∏—Å—ã–≤–∞–µ–º JSON –≤ –ª–æ–∫–∞–ª—å–Ω—É—é –ø–∞–ø–∫—É
fs.writeFileSync(outputPath, JSON.stringify(formattedRecipes, null, 4), 'utf-8');
console.log(`‚úÖ JSON –æ–±–Ω–æ–≤–ª—ë–Ω –∏ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –ª–æ–∫–∞–ª—å–Ω–æ: ${outputPath}`);