const TelegramBot = require('node-telegram-bot-api');
const fs = require('fs');
const path = require('path');

const token = process.env.BOT_TOKEN; // –ò—Å–ø–æ–ª—å–∑—É–µ–º ENV-–ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è Railway
const bot = new TelegramBot(token, { polling: true });

const recipes = JSON.parse(fs.readFileSync('recipes.json', 'utf-8'));

bot.onText(/(.+)/, async (msg, match) => {
    const chatId = msg.chat.id;
    const items = match[1].toLowerCase().split(',').map(i => i.trim());

    let foundRecipes = [];

    // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É, —á—Ç–æ–±—ã recipe –±—ã–ª –æ–ø—Ä–µ–¥–µ–ª—ë–Ω
    Object.keys(recipes).forEach(recipe => {
        if (recipes[recipe] && Array.isArray(recipes[recipe].ingredients)) {
            if (JSON.stringify(recipes[recipe].ingredients.sort()) === JSON.stringify(items.sort())) {
                foundRecipes.push(recipe);
            }
        }
    });

    if (foundRecipes.length > 0) {
        for (let recipe of foundRecipes) {
            const imagePath = `images/${recipe}.png`;
            bot.sendPhoto(chatId, imagePath, { caption: `–ò–∑ ${items.join(', ')} –º–æ–∂–Ω–æ —Å–∫—Ä–∞—Ñ—Ç–∏—Ç—å: ${recipe}` });
        }
    } else {
        bot.sendMessage(chatId, "–¢–∞–∫–æ–≥–æ —Ä–µ—Ü–µ–ø—Ç–∞ –Ω–µ—Ç –∏–ª–∏ –æ–Ω —Å–ª–æ–∂–Ω–µ–µ.");
    }
});

console.log("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...");
